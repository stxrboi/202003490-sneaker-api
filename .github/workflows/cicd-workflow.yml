name: CICD

on:
  push:
    branches: [aws-deploy]

jobs:
  build-and-deploy:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
          aws-region: 'af-south-1'
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build-and-Push image to aws ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
          IMAGE_TAG: ${{github.sha}}
          REPOSITORY: Sneaker-app
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: image id in aws ecs task deintion
        id:  task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: sneaker-task-definition.json
          container-name:  sneaker-app
          image: ${{steps.buid-image.outputs.image}}
      - name: Deploy AWS ECS task def
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{steps.task-def.outputs.task-definition@v1}}
          service: sneaker-service
          cluster: DevCluster
          wait-for-service-stability: true
        

      
          
        
        
